void incr ( ref int out, int it ) {
	out = it;
}

generator int expr(int x, int y, int z, int bnd){
	assert bnd > 0;
	generator int sum(){
		return {| ((x | y | z ) +  (x | y | z | ??) ) | ?? |};
	}
	if(??) { return sum(); }
	else { return {| expr(x,y,z,bnd-1) (* | /) sum() |}; }
}

boolean midPoint(int x, int y, int mid) {
	return (x + y)/2 == mid;
}
 
void update(int ox, int nx) {
	assert ox != nx;
}

harness void sketch (int x, int y, int mid, int other1, int other2, int other3) {
	assume midPoint(x, y, mid);
	incr (x, other1);
	mid = expr(x,y,mid,1);
	y = expr(x,y,mid,1);

	assert midPoint(x, y, mid);

	incr(x, other3);
	incr(y, other2);
	mid = expr(x, y, mid, 3);

	assert midPoint(x, y, mid);

	
}