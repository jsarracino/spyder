Component Midpoint {
  data lhs : int;
  data rhs: int;
  data mid: int;

  relation midPoint(x: int, y: int, m: int) {
    x + y = 2 * m
  }
  
  always midPoint(lhs, rhs, mid);
  
}

Component NotEq {
  data l: int;
  data r: int;
  data u: int;

  relation notEq(x: int, y: int, m: int) {
    x != y && x != m && y != m
  }

  always notEq(l, r, u);
}


Component Main {
  
  data x: int;
  data y: int;
  data m: int;

  using Midpoint(x, y, m);
  using NotEq(x, y, m);
  
  procedure incX() {
    x = x + 1;
  }

  procedure incY() {
    y = y + 1;
  }

  procedure incM() {
    m = m + 1;
  }

  
}