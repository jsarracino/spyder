Component Midpoint {
  data lhs : int[][];
  data rhs: int[][];
  data mid: int[][];

  relation solveX(xss: int[][]) {
    foreach (xs, ys, ms) in (xss, yss, mss) {
      foreach (x, y, m) in (xs, ys, ms) {
        y = y + (2 * m - y) - x && m = m + (2 * m - y) - x
      }
    }
  }
  relation solveY(ys: int[]) {
    foreach (xs, ys, ms) in (xss, yss, mss) {
      foreach (x, y, m) in (xs, ys, ms) {
        x = x + (2 * m - x) - y && m = m + (2 * m - x) - y
      }
    }
  }
  relation solveM(ms: int[]) {
    foreach (xs, ys, ms) in (xss, yss, mss) {
      foreach (x, y, m) in (xs, ys, ms) {
        x = x + ((x + y)/2 - 2 * m) - m && y = y + ((x + y)/2 - 2 * m) - m
      }
    }
  }
}

Component Main {
  
  data xss: int[][];
  data yss: int[][];
  data mss: int[][];

  
  procedure incX() {
    for (xs: int[]) in (xss) {
      for (x: int) in (xs) {
        x = x + 1;
      }
    }
  }

  procedure incY() {
    for (ys: int[]) in (yss) {
      for (y: int) in (ys) {
        y = y + 1;
      }
    }
  }

  procedure incM() {
    for (ms: int[]) in (mss) {
      for (m: int) in (ms) {
        m = m + 1;
      }
    }
  }

  
}