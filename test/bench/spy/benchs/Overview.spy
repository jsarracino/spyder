Component DateConv {
  data ds: int[];
  data ws: int[];

  relation Days(xs: int[], ys: int[]) {
    foreach (x, y) in (xs, ys) {
      y = 7 * x
    }
  }

  always Days(ds, ws);
}

Component CondFormat {

  data pos : int;
  data neg : int;
  data vals : int[];
  data colors: int[];

  relation Colored(p: int, n: int, vs: int[], cs: int[]) {
    foreach (v, c) in (vs, cs) {
      (v >= 0 ==> c = p) &&
      (v <  0 ==> c = n)
    }
  }

  always Colored(pos, neg, vals, colors);
}

Component CondFormat1 {

  data pos : int;
  data neg : int;
  data vals : int[];
  data colors: int[];

  relation Colored(p: int, n: int, vs: int[], cs: int[]) {
    foreach (v, c) in (vs, cs) {
      (v >= 0 ==> c = p) &&
      (v <  0 ==> c = n)
    }
  }

  always Colored(pos, neg, vals, colors);
}


Component Total {
  data vs : int[];
  data ts: int[];

  relation sumTo(xs: int[], totals: int[]) {
    foreach (x, t) in (xs, totals) {
      t = prev(t,0) + x
    }
  }

  always sumTo(vs, ts);
}

Component Main {
  data weeks: int[];
  data days: int[];
  data totals: int[];

  data fontColorsDays: int[];
  data fontColorsTotals: int[];

  data positiveColor: int;
  data negativeColor: int;

  using DateConv(days, weeks);
  using Total(days, totals);

  
  using CondFormat(positiveColor, negativeColor, days, fontColorsDays);
  using CondFormat1(positiveColor, negativeColor, totals, fontColorsTotals);
  
  
  

  procedure adjustCOLA() {
    let cola: int = 2;
    for (d: int) in (days) {
      if (d > 0) {
        d = d * cola;
      }
    }
  }

}

