Component EqArrs {
  data lhs : int[];
  data rhs : int[];

  relation Eq(x: int[], y: int[]) {
    foreach (p, q) in (x, y) {
      p = q
    }
  }
  always Eq(lhs, rhs);
}

Component DoubArrs {
  data lhs : int[];
  data rhs : int[];

  relation Doub(x: int[], y: int[]) {
    foreach (p, q) in (x, y) {
      p = 2 * q
    }
  }
  always Doub(lhs, rhs);
}

Component Main {
  data x: int[];
  data y: int[];

  data p: int[];
  //data q: int[];

  using EqArrs(x, y);
  using DoubArrs(y, p);

  procedure incrX() {
    for (l:int) in (x) {
      l = l + 1;
    }
  }
}