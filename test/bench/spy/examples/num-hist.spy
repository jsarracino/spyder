Component Tracker {
  data x : int;
  data idx: int;
  data hist: int[];

  relation tracked(x: int, idx: int, hist: int[]) {

    foreach (h, oh) with inner in (hist, ohist) {
      inner = idx ==> h = x
    }
    
  }

  relation eqArrs(l: int[], r: int[]) {
    foreach (a, b) in (l, r) {
      a = b
    }
  }


  
  always tracked(x, idx, hist);
  //always eqArrs(hist, old(hist));
  
}

Component Main {
  
  data x: int;
  data i: int;
  data xs: int[];

  using Tracker(x, i, xs);
  

  procedure incX() {
    x = x + 1;
    //i = i + 1; // need this to narrow option to foreach loop; otherwise, wouldn't bump index
  }

  
}