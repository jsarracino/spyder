Component DateConv {
  data ws: int[];
  data ms: int[];
  data ys: int[];

  relation Months(ws: int[], ms: int[]) {
    foreach (w, m) in (ws, ms) {
      m = 4 * w
    }
  }

  relation Years(ms: int[], ys: int[]) {
    foreach (m, y) in (ms, ys) {
      y = 12 * m
    }
  }

  always Months(ws, ms);
  always Years(ms, ys);
}

Component CondFormat {

  data pos : int;
  data neg : int;
  data vals : int[];
  data colors: int[];

  relation Colored(p: int, n: int, vs: int[], cs: int[]) {
    foreach (v, c) in (vs, cs) {
      (v >= 0 ==> c = p) &&
      (v <  0 ==> c = n)
    }
  }

  always Colored(pos, neg, vals, colors);
}

Component AltColor {
  data evenColor : int;
  data oddColor : int;
  data rows : int[];

  relation Alternating(e: int, o: int, cs: int[]) {
    foreach (c) with idx in (cs){
      ((idx % 2) = 0 ==> c = e) && 
      ((idx % 2) = 1 ==> c = o)
    }
  }

  relation Backgrounds(e: int, o: int, cs: int[]) {
    foreach (c) in (cs){
      (c = e || c = o)
    }
  }

  always Alternating(evenColor, oddColor, rows);
  always Backgrounds(evenColor, oddColor, rows);
}


Component Main {
  data weeks: int[];
  data months: int[];
  data years: int[];

  data fontColors: int[];
  data bkgColors: int[];

  data oddColor: int;
  data evenColor: int;
  data positiveColor: int;
  data negativeColor: int;

  using DateConv(weeks, months, years);
  using CondFormat(positiveColor, negativeColor, weeks, fontColors);
  using AltColor(evenColor, oddColor, bkgColors);



  
  procedure editWeekly() {
    let i: int;
    let val: int;
    for (w: int) with idx in (weeks) {
      if (idx == i) {
        w = val;
      }
    }

  }
  
  procedure setEven() {
    let to: int;
    evenColor = to;
  }
  

}

